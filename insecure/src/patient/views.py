from django.shortcuts import HttpResponseRedirect, redirect, render
import hashlib
from django.db import connection
from django.urls import reverse
from django.utils.crypto import get_random_string
import os
from django.core.files.storage import FileSystemStorage
# Create your views here.

cursor = connection.cursor()

def homepage(request, username):
    query = "SELECT * from records where patientid = '%s';" % (username)
    print(query)
    results = cursor.execute(query).fetchall()
    if len(results) == 0:
        isEmpty = True
        return render(request, 'patient/patienthomepage.html', {'username': username, 'isEmpty': isEmpty})
    else:
        return render(request, 'patient/patienthomepage.html', {'username': username, 'results': results})

def patientLogin(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        hashed_password = hashlib.md5(str(password).encode()).hexdigest()
        checkLoginQuery = "SELECT * from login where username = '%s' and status = 'logged in';" % (username)
        checkUserQuery = "SELECT * from common_users where username = '%s' and password = '%s' and role = 'patient';" % (username, hashed_password)
        user_results = cursor.execute(checkUserQuery).fetchall()
        login_results = cursor.execute(checkLoginQuery).fetchall()
        if len(user_results) != 0 and len(login_results) != 0:
            return HttpResponseRedirect(reverse('patient:homepage', args = (username,)))
        elif len(user_results) != 0 and len(login_results) == 0:
            updateLoginQuery = "UPDATE login set status = 'logged in' where username = '%s';" % username
            cursor.execute(updateLoginQuery)
            connection.commit()
            return HttpResponseRedirect(reverse('patient:homepage', args = (username,)))
        else:
            errorMessage = "Invalid username/password. Please try again!"
            return render(request, 'common/login.html', {'errorMessage': errorMessage})
    else:
        return render(request, 'common/login.html', {})

def logout(request, username):
    updateLogoutQuery = "UPDATE login set status = 'logged out' where username = '%s';" % username
    cursor.execute(updateLogoutQuery)
    connection.commit()
    return HttpResponseRedirect(reverse('patient:login'))

def viewDiagnosis(request, username, recordid):
    getQuery = "SELECT * from records where recordid = '%s';" % (recordid)
    results = cursor.execute(getQuery).fetchall()[0]
    if request.method == 'POST':
        comment = request.POST.get('comments')
        postQuery = "UPDATE records set patientcomments = '%s' where recordid = '%s';" % (comment, recordid)
        cursor.execute(postQuery)
        connection.commit()
        successMessage = "Diagnosis has been successfully updated"
        return render(request, 'patient/patientviewdiagnosis.html', {'username' : username, 'results' : results, 'successMessage' : successMessage})
    return render(request, 'patient/patientviewdiagnosis.html', {'username': username, 'results' : results})

def viewAppointment(request, username):
    query = "SELECT * from appointment where patientid = '%s' and status = 'confirmed';" % (username)
    results = cursor.execute(query).fetchall()
    print(results)
    if len(results) == 0:
        isEmpty = True
        return render(request, 'patient/patientviewappt.html', {'username' : username, 'isEmpty' : isEmpty})
    return render(request, 'patient/patientviewappt.html', {'username' : username, 'results' : results})

def newAppointment(request, username):
    if request.method == 'POST':
        doctorid = request.POST.get('doctorid')
        checkQuery = "SELECT * from common_users where username = '%s' and role = 'doctor';" % (doctorid)
        results = cursor.execute(checkQuery).fetchall()
        if len(results) == 0:
            errorMessage = "Invalid doctor ID. Please try again!"
            return render(request, 'patient/patientnewappt.html', {'username': username,'errorMessage' : errorMessage})
        else:
            apptid = get_random_string(20)
            apptdate = request.POST.get('apptdate')
            insertQuery = "INSERT INTO appointment(doctorid, patientid, apptdate, apptid) VALUES ('%s', '%s', '%s', '%s');" % (doctorid, username, apptdate, apptid)
            cursor.execute(insertQuery)
            connection.commit()
            successMessage = "Appointment has been recorded successfully! Please wait for doctor's confirmation!"
            return render(request, 'patient/patientnewappt.html', {'username' : username, 'successMessage' : successMessage})
    return render(request, 'patient/patientnewappt.html', {'username' : username})

def changePassword(request, username):
    userQuery = "SELECT * from common_users where username = '%s';" % (username)
    role = cursor.execute(userQuery).fetchall()[0][4]
    if request.method == 'POST':
        current_password = cursor.execute(userQuery).fetchall()[0][1]
        input_oldpassword = request.POST.get('oldpassword')
        new_password = request.POST.get('newpassword')
        repeat_password = request.POST.get('repeatpassword')
        if str(new_password) == str(repeat_password) and str(current_password) == hashlib.md5(str(input_oldpassword).encode()).hexdigest():
            encrypted_newpassword = hashlib.md5(str(new_password).encode()).hexdigest()
            updateQuery  = "UPDATE common_users set password = '%s' where username = '%s';" % (str(encrypted_newpassword), username)
            cursor.execute(updateQuery)
            connection.commit()
            return HttpResponseRedirect(reverse('patient:login'))
        else:
            print("UNSUCCESSFULL change password")
            return render(request, 'doctor/doctorchangepassword.html', {'username': username, 'role': role, 'errorMessage': 'Password change unsuccessful. Please check your input fields!'})
    return render(request, 'patient/patientchangepassword.html', {'username': username})

def profile(request, username):
    query = "SELECT * from common_users where username = '%s';" % (username)
    results = cursor.execute(query).fetchall()[0]
    filedir = str(results[5])
    if request.method == 'POST':
        try:
            uploadedfile = request.FILES['fileupload']
        except:
            uploadedfile = None
        name = request.POST.get('name')
        email = request.POST.get('email')
        address = request.POST.get('address')
        if uploadedfile == None:
            updateQuery = "UPDATE common_users set name = '%s', email = '%s', address = '%s' where username = '%s';" % (name,email,address,username)
            cursor.execute(updateQuery)
            connection.commit()
            return HttpResponseRedirect(reverse('patient:profile', args = (username,)))
        else:
            filename = get_random_string(20)
            fileextension = os.path.splitext(uploadedfile.name)[1]
            print(fileextension)
            filedirectory = os.getcwd() + '/static/uploads/' + str(filename) + str(fileextension)
            fs = FileSystemStorage()
            fs.save(filedirectory, uploadedfile)
            newFileDir = '/static/uploads/' + str(filename) + str(fileextension)
            updateQuery = "UPDATE common_users set name = '%s', email = '%s', address = '%s', filedir = '%s' where username = '%s';" % (name,email,address,newFileDir,username)
            cursor.execute(updateQuery)
            connection.commit()
            return HttpResponseRedirect(reverse('patient:profile', args = (username,)))
    return render(request, 'patient/patientprofile.html',{'username': username, 'filedir' : filedir, 'results' : results})